{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { GiftedChat, Bubble, InputToolbar } from 'react-native-gifted-chat';\nimport * as Permissions from 'expo-permissions';\nimport * as ImagePicker from 'expo-image-picker';\nimport CustomActions from \"./CustomActions\";\nimport * as Location from 'expo-location';\nimport MapView from 'react-native-maps';\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport NetInfo from '@react-native-community/netinfo';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat(_props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text,\n          createdAt: data.createdAt.toDate(),\n          user: {\n            _id: data.user._id,\n            name: data.user.name\n          },\n          image: data.image || null,\n          location: data.location || null\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    _this.renderCustomActions = function (props) {\n      return _jsx(CustomActions, _objectSpread({}, props));\n    };\n\n    _this.state = {\n      messages: [],\n      uid: 0,\n      user: {\n        _id: '',\n        name: ''\n      },\n      isConnected: null,\n      image: null,\n      location: null\n    };\n    var firebaseConfig = {\n      apiKey: \"AIzaSyCE_FyOOGhsEeBEZmJId8wKaF-YZLB7PVY\",\n      authDomain: \"chat-app-62ffd.firebaseapp.com\",\n      projectId: \"chat-app-62ffd\",\n      storageBucket: \"chat-app-62ffd.appspot.com\",\n      messagingSenderId: \"171285586178\",\n      appId: \"1:171285586178:web:94fe3a87a3f0644ea2a21b\",\n      measurementId: \"G-3RV0TNRX7F\"\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    _this.referenceChatMessages = firebase.firestore().collection(\"messages\");\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var name = this.props.route.params.name;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      NetInfo.fetch().then(function (connection) {\n        if (connection.isConnected) {\n          _this2.setState({\n            isConnected: true\n          });\n\n          _this2.referenceChatMessages = firebase.firestore().collection('messages');\n          _this2.authUnsubscribe = firebase.auth().onAuthStateChanged(function _callee(user) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!user) {\n                      firebase.auth().signInAnonymously();\n                    }\n\n                    _this2.setState({\n                      uid: user.uid,\n                      messages: [],\n                      user: {\n                        _id: user.uid,\n                        name: name\n                      }\n                    });\n\n                    _this2.unsubscribe = _this2.referenceChatMessages.orderBy('createdAt', 'desc').onSnapshot(_this2.onCollectionUpdate);\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          });\n        } else {\n          _this2.setState({\n            isConnected: false\n          });\n\n          _this2.getMessages();\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.isConnected) {\n        this.unsubscribe();\n        this.authUnsubscribe();\n      }\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      var messages;\n      return _regeneratorRuntime.async(function getMessages$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              messages = '';\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('messages'));\n\n            case 4:\n              _context2.t0 = _context2.sent;\n\n              if (_context2.t0) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.t0 = [];\n\n            case 7:\n              messages = _context2.t0;\n              this.setState({\n                messages: JSON.parse(messages)\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t1 = _context2[\"catch\"](1);\n              console.log(_context2.t1.message);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[1, 11]], Promise);\n    }\n  }, {\n    key: \"saveMessages\",\n    value: function saveMessages() {\n      return _regeneratorRuntime.async(function saveMessages$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('messages', JSON.stringify(this.state.messages)));\n\n            case 3:\n              _context3.next = 8;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0.message);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"deleteMessages\",\n    value: function deleteMessages() {\n      return _regeneratorRuntime.async(function deleteMessages$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('messages'));\n\n            case 3:\n              this.setState({\n                messages: []\n              });\n              _context4.next = 9;\n              break;\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0.message);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, [[0, 6]], Promise);\n    }\n  }, {\n    key: \"addMessages\",\n    value: function addMessages(message) {\n      this.referenceChatMessages.add({\n        uid: this.state.uid,\n        _id: message._id,\n        text: message.text || '',\n        createdAt: message.createdAt,\n        user: message.user,\n        image: message.image || null,\n        location: message.location || null\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this3 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      }, function () {\n        _this3.addMessages(_this3.state.messages[0]);\n\n        _this3.saveMessages();\n\n        _this3.deleteMessages();\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: '#000'\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"renderInputToolbar\",\n    value: function renderInputToolbar(props) {\n      if (this.state.isConnected == false) {} else {\n        return _jsx(InputToolbar, _objectSpread({}, props));\n      }\n    }\n  }, {\n    key: \"renderCustomView\",\n    value: function renderCustomView(props) {\n      var currentMessage = props.currentMessage;\n\n      if (currentMessage.location) {\n        return _jsx(MapView, {\n          style: {\n            width: 150,\n            height: 100,\n            borderRadius: 13,\n            margin: 3\n          },\n          region: {\n            latitude: currentMessage.location.latitude,\n            longitude: currentMessage.location.longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var bgColor = this.props.route.params.bgColor;\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          backgroundColor: bgColor\n        },\n        children: [_jsx(GiftedChat, {\n          renderInputToolbar: this.renderInputToolbar.bind(this),\n          renderActions: this.renderCustomActions,\n          renderBubble: this.renderBubble.bind(this),\n          renderCustomView: this.renderCustomView,\n          messages: this.state.messages,\n          onSend: function onSend(messages) {\n            return _this4.onSend(messages);\n          },\n          user: {\n            _id: this.state.user._id,\n            name: this.state.user.name\n          }\n        }), Platform.OS === 'android' ? _jsx(KeyboardAvoidingView, {\n          behavior: \"height\"\n        }) : null]\n      });\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };","map":{"version":3,"names":["React","GiftedChat","Bubble","InputToolbar","Permissions","ImagePicker","CustomActions","Location","MapView","firebase","NetInfo","AsyncStorage","Chat","props","onCollectionUpdate","querySnapshot","messages","forEach","doc","data","push","_id","text","createdAt","toDate","user","name","image","location","setState","renderCustomActions","state","uid","isConnected","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","referenceChatMessages","firestore","collection","route","params","navigation","setOptions","title","fetch","then","connection","authUnsubscribe","auth","onAuthStateChanged","signInAnonymously","unsubscribe","orderBy","onSnapshot","getMessages","getItem","JSON","parse","console","log","message","setItem","stringify","removeItem","add","previousState","append","addMessages","saveMessages","deleteMessages","right","backgroundColor","currentMessage","width","height","borderRadius","margin","latitude","longitude","latitudeDelta","longitudeDelta","bgColor","flex","justifyContent","renderInputToolbar","bind","renderBubble","renderCustomView","onSend","Platform","OS","Component"],"sources":["/Users/Bryan/Documents/chat-app/components/Chat.js"],"sourcesContent":["\n\nimport React from 'react';\nimport { View, Text, Platform, KeyboardAvoidingView } from 'react-native';\nimport { GiftedChat, Bubble, InputToolbar} from 'react-native-gifted-chat'\n\nimport * as Permissions from 'expo-permissions';\nimport * as ImagePicker from 'expo-image-picker';\n\nimport CustomActions from './CustomActions';\n\nimport * as Location from 'expo-location';\nimport MapView from 'react-native-maps';\n\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nimport NetInfo from '@react-native-community/netinfo';\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n\n\n\nexport default class Chat extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      messages: [],\n      uid: 0,\n   \n      user: {\n        _id: '',\n        name: '',\n      },\nisConnected: null,\nimage: null,\nlocation: null\n\n    };\n\n\n\n\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCE_FyOOGhsEeBEZmJId8wKaF-YZLB7PVY\",\n  authDomain: \"chat-app-62ffd.firebaseapp.com\",\n  projectId: \"chat-app-62ffd\",\n  storageBucket: \"chat-app-62ffd.appspot.com\",\n  messagingSenderId: \"171285586178\",\n  appId: \"1:171285586178:web:94fe3a87a3f0644ea2a21b\",\n  measurementId: \"G-3RV0TNRX7F\"\n};\n\nif (!firebase.apps.length){\n  firebase.initializeApp(firebaseConfig);\n}\n// Reference to the Firestore collection \"messages\"\nthis.referenceChatMessages = firebase.firestore().collection(\"messages\");\n\n}\n\ncomponentDidMount() {\n  // Set name as title chat\n  let { name } = this.props.route.params;\n  this.props.navigation.setOptions({ title: name });\n\n  // Check if user is offline or online\n  NetInfo.fetch().then((connection) => {\n    if (connection.isConnected) {\n      this.setState({\n        isConnected: true,\n      });\n\n      // Reference to load messages from Firebase\n      this.referenceChatMessages = firebase\n        .firestore()\n        .collection('messages');\n\n      // Authenticate user anonymously\n      this.authUnsubscribe = firebase\n        .auth()\n        .onAuthStateChanged(async (user) => {\n          if (!user) {\n            firebase.auth().signInAnonymously();\n          }\n          this.setState({\n            uid: user.uid,\n            messages: [],\n            user: {\n              _id: user.uid,\n              name: name,\n            },\n          });\n          this.unsubscribe = this.referenceChatMessages\n            .orderBy('createdAt', 'desc')\n            .onSnapshot(this.onCollectionUpdate);\n        });\n    } else {\n      this.setState({\n        isConnected: false,\n      });\n      this.getMessages();\n    }\n  });\n}\n\ncomponentWillUnmount() {\n  if (this.isConnected) {\n    this.unsubscribe();\n    this.authUnsubscribe();\n  }\n}\n\n\nonCollectionUpdate = (querySnapshot) => {\n  const messages = [];\n  // go through each document\n  querySnapshot.forEach((doc) => {\n    // get the QueryDocumentSnapshot's data\n    let data = doc.data();\n    messages.push({\n      _id: data._id,\n      text: data.text,\n      createdAt: data.createdAt.toDate(),\n      user: {\n        _id: data.user._id,\n        name: data.user.name,\n      },\n      image: data.image || null,\n      location: data.location || null,\n    });\n  });\n  this.setState({\n    messages,\n  });\n};\n\n\nasync getMessages() {\n  let messages = '';\n  try {\n    messages = await AsyncStorage.getItem('messages') || [];\n    this.setState({\n      messages: JSON.parse(messages)\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n\nasync saveMessages() {\n  try {\n    await AsyncStorage.setItem('messages', JSON.stringify(this.state.messages));\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n\n// delete function for testing\nasync deleteMessages() {\n  try {\n    await AsyncStorage.removeItem('messages');\n    this.setState({\n      messages: []\n    })\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n\n\n\n// Add messages to Firebase \naddMessages(message) {\n  this.referenceChatMessages.add({\n    uid: this.state.uid,\n    _id: message._id,\n    text: message.text || '',\n    createdAt: message.createdAt,\n    user: message.user,\n    image: message.image || null,\n    location: message.location || null,\n\n  });\n}\n\n  onSend(messages = []) {\n    this.setState(previousState => ({\n      messages: GiftedChat.append(previousState.messages, messages), }), () => { \n        this.addMessages(this.state.messages[0]);\n        this.saveMessages()\n        this.deleteMessages()\n    })\n \n  }\n  renderBubble(props) {\n    return (\n      <Bubble\n        {...props}\n        wrapperStyle={{\n          right: {\n            backgroundColor: '#000'\n          }\n        }}\n      />\n    )\n  }\n\n\n  renderInputToolbar(props) {\n    if (this.state.isConnected == false) {\n    } else {\n      return(\n        <InputToolbar\n        {...props}\n        />\n      );\n    }\n  }\n\n  renderCustomView(props) {\n    const { currentMessage } = props;\n    if (currentMessage.location) {\n      return (\n        <MapView\n          style={{ width: 150, height: 100, borderRadius: 13, margin: 3 }}\n          region={{\n            latitude: currentMessage.location.latitude,\n            longitude: currentMessage.location.longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421,\n          }}\n        />\n      );\n    }\n    return null;\n  }\n\n\n  renderCustomActions = (props) => {\n    return <CustomActions {...props} />;\n  };\n  render() {\n\n     let  {bgColor} = this.props.route.params;\n    return (\n    \n      <View style={{flex:1, justifyContent: 'center', backgroundColor: bgColor}}>\n        <GiftedChat\n            renderInputToolbar={this.renderInputToolbar.bind(this)}\n            renderActions={this.renderCustomActions}\n         renderBubble={this.renderBubble.bind(this)}\n         renderCustomView={this.renderCustomView}\n  messages={this.state.messages}\n  onSend={messages => this.onSend(messages)}\n  user={{ _id: this.state.user._id, name: this.state.user.name }}\n/>\n{ Platform.OS === 'android' ? <KeyboardAvoidingView behavior=\"height\" /> : null\n }\n</View>\n     \n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}